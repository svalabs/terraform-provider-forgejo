# Terraform Provider testing workflow.
name: Tests

# This GitHub action runs your tests for each pull request and push.
# Optionally, you can turn it on using a schedule for regular testing.
on:
  pull_request:
    paths-ignore:
      - "README.md"
  push:
    paths-ignore:
      - "README.md"

# Testing only needs permissions to read the repository contents.
permissions:
  contents: read

jobs:
  # Ensure project builds before running testing matrix
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Set up Go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version-file: "go.mod"
          cache: true

      - name: Download Go modules
        run: go mod download
      - name: Compile Go package
        run: go build -v .
      - name: Run linters
        uses: golangci/golangci-lint-action@4afd733a84b1f43292c63897423277bb7f4313a9 # v8.0.0
        with:
          version: latest

  generate:
    name: Generate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Set up Go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version-file: "go.mod"
          cache: true
      # We need the latest version of Terraform for our documentation generation to use
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_wrapper: false

      - name: Generate documentation
        run: make generate
      - name: Check for differences
        run: |
          git diff --compact-summary --exit-code || \
            (echo; echo "Unexpected difference in directories after code generation. Run 'make generate' command and commit."; exit 1)

  # Run acceptance tests in a matrix with Terraform CLI versions
  test:
    name: Terraform Provider Acceptance Tests
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        # list whatever Terraform versions here you would like to support
        terraform:
          - "1.11.*"
          - "1.12.*"
          - "1.13.*"

    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Set up Go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version-file: "go.mod"
          cache: true
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_version: ${{ matrix.terraform }}
          terraform_wrapper: false
      - name: Set up Docker Compose
        uses: docker/setup-compose-action@v1

      - name: Start Forgejo server
        working-directory: ./docker
        run: |
          docker compose pull --quiet
          docker compose up --no-start
          docker run --rm -v docker_forgejo:/data alpine mkdir -p /data/gitea/conf
          docker compose cp app.ini forgejo:/data/gitea/conf/app.ini
          docker compose start
      - name: Wait for 30 seconds
        run: sleep 30s
      - name: Create admin user
        working-directory: ./docker
        run: >
          docker compose exec -u git forgejo
          /usr/local/bin/forgejo admin user create
          --username tfadmin
          --email tfadmin@localhost
          --random-password
          --admin
      - name: Generate admin token
        id: admin
        working-directory: ./docker
        run: >
          echo "token=$(docker compose exec -u git forgejo
          /usr/local/bin/forgejo admin user generate-access-token
          --username tfadmin
          --scopes write:organization,write:repository,write:user,write:admin
          --raw)" >> "$GITHUB_OUTPUT"

      - name: Download Go modules
        run: go mod download
      - name: Run acceptance tests
        env:
          TF_ACC: "1"
          FORGEJO_API_TOKEN: ${{ steps.admin.outputs.token }}
        run: go test -v -cover ./internal/provider/
        timeout-minutes: 10
